Tipos Primitivos: int   = Números Inteiros
                  float = Números com Virgula
    AULA 06       bool  = True / False
                  str   = Entre ' '

Operadores Aritméticos: +  = Adição            Ordem de Precedência: 1° ()
                        -  = Subtração                               2° **
                        *  = Multiplicação                           3° *, /, //, %
    AULA 07             /  = Divisão                                 4° +, -
                        ** = Potência
                        // = Divisão Inteira
                        %  = Resto da Divisão

Manipulando Texto:   Análize: len()   = Comprimento   Transformação: replace()    = Trocar
                              count() = Contar                       upper()      = Maiúsculo
                              find()  = Encontrar                    lower()      = Minúsculo
   AULA 09                                                           capitalize() = Deixa só a 1° letra em maiúsculo
                     Divisão: split()                                title()      = Todas as primeiras letras em maiúsculo
                     Junção: join()                                  strip()      = Renoves os espaços inuteis

Cores: /033[Istilo: 0 = Nada      ;Texto: 30 ;Fundo: 40 m  = Branco
                    1 = Negrito           31         41    = Vermelho
                    4 = Underline         32         42    = Verde
                    7 = Inverter          33         43    = Amarelo
   AULA 11                                34         44    = Azul
                                          35         45    = Roxo
                                          36         46    = Ciano
                                          37         47    = cinza

Estruturas de Repetição: for ... in ...:
                         if, elif, else
   Mundo02               while, while True



Estruturas Compostas: Mundo03

Tuplas: São estruturas de variáveis compostas onde múltiplas informações são guardadas em grupo na memória.

        Possuem as seguintes características:  São definidas por ()
                                               São imutáveis

        Ex: lanche = ("Hamburger", "Batata", "Cenoura", "Banana")

        Imprimindo uma tupla inteira
        print(lanche)

        Imprimindo um elemento da tupla   #Lembrar que indices do python começam em 0
        print(lanche[número])


lista: Possuem as seguintes características:  São definidas por []
                                              São mutáveis
       É possivel colocar lista dentro de lista


       lanche.append('valor') #inclui valor na última posição

       lanche.insert(0,'valor') #substitui valor na posição '0'

       del lanche[3]
       lanche.pop() #elimina o último e reposiciona os valores na lista

       if 'valor' in lanche: #evita msg de erro
          lanche.remove('valor') #evita msg de erro

       lista2 = list(range(4,11)) #lista2 = [4,5,6,7,8,9,10]

       lista3 = [8,5,4,3,0]
       lista3.sort() #ordenar valores [0,3,4,5,8]
       lista3.sort(reverse=True) #ordenar valores de forma inversa [8,5,4,3,0]


Dicionários: Possuem as seguintes características: É uma variável composta igual as listas e as tuplas, porém com os indíces personalizáveis formados por um par de chave-valor,  e quando você fornece uma chave, Python retorna o valor associado daquela chave.
                                                   São definidas por {}

             Usa-se dois pontos para conectar a chave com o seu valor, e aspas simples ou duplas para separar individualmente um par de chave-valor. 
                Exemplo: dados = {'nome': 'Pedro', 'idade': 25}

             Para acessar o valor associado a uma chave individual, dê o nome do dicionário e então coloque a chave em um par de colchetes
                Exemplo:print(dados['nome'])  # Pedro

             Para adicionar um novo par de chave-valor no final de um dicionário existente, dê o nome do dicionário e a nova chave em um par de colchete e use o sinal de igual para colocar o novo valor. Também irá funcionar para um dicionário vazio do mesmo jeito.
                Exemplo: dados = {'nome': 'Pedro', 'idade': 25}
                         dados['sexo'] = 'M'

             A estrutura de um dicionário é divido em três partes:
              A primeira são os valores, que podem ser acessados através do método interno dict.values(), eles são os valores das chaves.
              A segunda são as chaves, que podem ser acessadas através do método interno dict.keys(), é por elas que você acessa os valores. 
              E por último os itens, que podem ser acessados através do método interno dict.items(), são todos os pares de chave-valor do dicionário.



